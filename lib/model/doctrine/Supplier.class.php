<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Supplier extends BaseSupplier
{
  protected $calculated = false;
  protected $gross_amount, $paid_amount;
  
  /**
   * sets the Supplier data from a Common object
   *
   * @return this
   * @author Enrique Martinez
   **/
  public function setDataFrom($obj)
  {
    $this->setCompany($obj->getCompany());
    $this->setName($obj->getSupplierName());
    $this->setNameSlug(SupplierTable::slugify($obj->getSupplierName()));
    $this->setIdentification($obj->getSupplierIdentification());
    $this->setEmail($obj->getSupplierEmail());
    $this->setContactPerson($obj->getContactPerson());
    $this->setInvoicingAddress($obj->getInvoicingAddress());
    
    return $this;
  }
 
  /**
   * get Supplier gross amount
   *
   * @return double
   * @author Enrique Martinez
   **/
  public function getGrossAmount($date_range = null) {
    $this->calculateAmounts($date_range);
    return $this->gross_amount;
  }
  
  public function getPaidAmount($date_range = null) {
    $this->calculateAmounts($date_range);
    return $this->paid_amount;
  }
  
  public function getDueAmount($date_range = null)
  {
    return $this->getGrossAmount($date_range) - $this->getPaidAmount($date_range);
  }
  
  /**
   * calculate Supplier gross, paid amount of non draft invoices
   *
   * @return none
   * @author Marc MontaÃ±Ã©s
   **/
  protected function calculateAmounts ($date_range = null) {
    if (!$this->calculated) {
      $this->gross_amount = 0;
      $this->paid_amount = 0;
      $invoices = $this->getTable()->getNonDraftInvoices($this->getId(),$date_range);
      
      foreach ($invoices as $invoice) {
        $this->gross_amount += $invoice->getGrossAmount();
        $this->paid_amount += $invoice->getPaidAmount();
      }
      $this->calculated = true;
    }
  }

  /**
   * avoid deleting if an invoice with this Supplier
   * exists
   *
   * @return none
   * @author JoeZ
   **/
  public function delete(Doctrine_Connection $conn = null)
  {
    $q1 = Doctrine_Query::create()
      ->from('Common c')
      ->where('c.Supplier_id = ?',$this->id);
    if($q1->count() > 0)
    {
      throw new siwappIntegrityException('The Supplier has invoices',1);
      return false;
    }
    return parent::delete($conn);
  }

  /** 
   * takes care of sluggifying fields before saving
   */
  public function preSave($event)
  {
    if(!$this->name_slug)
    {
      $this->name_slug = SupplierTable::slugify($this->name);
    }
    parent::preSave($event);
  }
}
