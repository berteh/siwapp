<?php

/**
 * BaseTemplate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $company_id
 * @property string $name
 * @property clob $template
 * @property string $models
 * @property Company $Company
 * 
 * @method integer  getCompanyId()  Returns the current record's "company_id" value
 * @method string   getName()       Returns the current record's "name" value
 * @method clob     getTemplate()   Returns the current record's "template" value
 * @method string   getModels()     Returns the current record's "models" value
 * @method Company  getCompany()    Returns the current record's "Company" value
 * @method Template setCompanyId()  Sets the current record's "company_id" value
 * @method Template setName()       Sets the current record's "name" value
 * @method Template setTemplate()   Sets the current record's "template" value
 * @method Template setModels()     Sets the current record's "models" value
 * @method Template setCompany()    Sets the current record's "Company" value
 * 
 * @package    siwapp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTemplate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('template');
        $this->hasColumn('company_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('template', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('models', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));

        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Company', array(
             'local' => 'company_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => false,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}