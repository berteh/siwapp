<?php

/**
 * BaseCompany
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $address
 * @property string $email
 * @property string $phone
 * @property string $fax
 * @property string $url
 * @property clob $logo
 * @property string $currency
 * @property integer $currency_decimals
 * @property clob $legal_terms
 * @property string $pdf_orientation
 * @property string $pdf_size
 * @property Doctrine_Collection $User
 * @property Doctrine_Collection $Company
 * 
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getAddress()           Returns the current record's "address" value
 * @method string              getEmail()             Returns the current record's "email" value
 * @method string              getPhone()             Returns the current record's "phone" value
 * @method string              getFax()               Returns the current record's "fax" value
 * @method string              getUrl()               Returns the current record's "url" value
 * @method clob                getLogo()              Returns the current record's "logo" value
 * @method string              getCurrency()          Returns the current record's "currency" value
 * @method integer             getCurrencyDecimals()  Returns the current record's "currency_decimals" value
 * @method clob                getLegalTerms()        Returns the current record's "legal_terms" value
 * @method string              getPdfOrientation()    Returns the current record's "pdf_orientation" value
 * @method string              getPdfSize()           Returns the current record's "pdf_size" value
 * @method Doctrine_Collection getUser()              Returns the current record's "User" collection
 * @method Doctrine_Collection getCompanyUser()       Returns the current record's "CompanyUser" collection
 * @method Doctrine_Collection getCompany()           Returns the current record's "Company" collection
 * @method Company             setName()              Sets the current record's "name" value
 * @method Company             setAddress()           Sets the current record's "address" value
 * @method Company             setEmail()             Sets the current record's "email" value
 * @method Company             setPhone()             Sets the current record's "phone" value
 * @method Company             setFax()               Sets the current record's "fax" value
 * @method Company             setUrl()               Sets the current record's "url" value
 * @method Company             setLogo()              Sets the current record's "logo" value
 * @method Company             setCurrency()          Sets the current record's "currency" value
 * @method Company             setCurrencyDecimals()  Sets the current record's "currency_decimals" value
 * @method Company             setLegalTerms()        Sets the current record's "legal_terms" value
 * @method Company             setPdfOrientation()    Sets the current record's "pdf_orientation" value
 * @method Company             setPdfSize()           Sets the current record's "pdf_size" value
 * @method Company             setUser()              Sets the current record's "User" collection
 * @method Company             setCompanyUser()       Sets the current record's "CompanyUser" collection
 * @method Company             setCompany()           Sets the current record's "Company" collectionUser
 * @property Doctrine_Collection $Company
 * 
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getAddress()           Returns the current record's "address" value
 * @method string              getEmail()             Returns the current record's "email" value
 * @method string              getPhone()             Returns the current record's "phone" value
 * @method string              getFax()               Returns the current record's "fax" value
 * @method string              getUrl()               Returns the current record's "url" value
 * @method clob                getLogo()              Returns the current record's "logo" value
 * @method string              getCurrency()          Returns the current record's "currency" value
 * @method integer             getCurrencyDecimals()  Returns the current record's "currency_decimals" value
 * @method clob                getLegalTerms()        Returns the current record's "legal_terms" value
 * @method string              getPdfOrientation()    Returns the current record's "pdf_orientation" value
 * @method string              getPdfSize()           Returns the current record's "pdf_size" value
 * @method Doctrine_Collection getUser()              Returns the current record's "User" collection
 * @method Doctrine_Collection getCompanyUser()       Returns the current record's "CompanyUser" collection
 * @method Doctrine_Collection getCompany()           Returns the current record's "Company" collection
 * @method Company             setName()              Sets the current record's "name" value
 * @method Company             setAddress()           Sets the current record's "address" value
 * @method Company             setEmail()             Sets the current record's "email" value
 * @method Company             setPhone()             Sets the current record's "phone" value
 * @method Company             setFax()               Sets the current record's "fax" value
 * @method Company             setUrl()               Sets the current record's "url" value
 * @method Company             setLogo()              Sets the current record's "logo" value
 * @method Company             setCurrency()          Sets the current record's "currency" value
 * @method Company             setCurrencyDecimals()  Sets the current record's "currency_decimals" value
 * @method Company             setLegalTerms()        Sets the current record's "legal_terms" value
 * @method Company             setPdfOrientation()    Sets the current record's "pdf_orientation" value
 * @method Company             setPdfSize()           Sets the current record's "pdf_size" value
 * @method Company             setUser()              Sets the current record's "User" collection
 * @method Company             setCompanyUser()       Sets the current record's "CompanyUser" collection
 * @method Company             setCompany()           Sets the current record's "Company" collection
 * 
 * @package    siwapp
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompany extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('address', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('fax', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('logo', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('currency', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('currency_decimals', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('legal_terms', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('pdf_orientation', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('pdf_size', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));


        $this->index('cst', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser as User', array(
             'refClass' => 'CompanyUser',
             'local' => 'company_id',
             'foreign' => 'sf_guard_user_id'));

        $this->hasMany('CompanyUser', array(
             'local' => 'id',
             'foreign' => 'company_id'));

        $this->hasMany('Customer as Company', array(
             'local' => 'id',
             'foreign' => 'company_id'));
    }
}