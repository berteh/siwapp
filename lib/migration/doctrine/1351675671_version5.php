<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Version5 extends Doctrine_Migration_Base
{
    public function up()
    {
        $this->createTable('company', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'identification' => 
             array(
              'type' => 'string',
              'length' => '100',
             ),
             'name' => 
             array(
              'type' => 'string',
              'length' => '100',
             ),
             'address' => 
             array(
              'type' => 'string',
              'length' => '500',
             ),
             'email' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'phone' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             'fax' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             'url' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'logo' => 
             array(
              'type' => 'clob',
              'length' => '',
             ),
             'currency' => 
             array(
              'type' => 'string',
              'length' => '10',
             ),
             'currency_decimals' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'legal_terms' => 
             array(
              'type' => 'clob',
              'length' => '',
             ),
             'pdf_orientation' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             'pdf_size' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             ), array(
             'indexes' => 
             array(
              'cst' => 
              array(
              'fields' => 
              array(
               0 => 'name',
              ),
              'type' => 'unique',
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'charset' => 'utf8',
             ));
        $this->createTable('company_user', array(
             'company_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'sf_guard_user_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '4',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'company_id',
              1 => 'sf_guard_user_id',
             ),
             'charset' => 'utf8',
             ));

        $this->createTable('expense_type', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'company_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'name' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'enabled' => 
             array(
              'type' => 'boolean',
              'default' => '1',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'charset' => 'utf8',
             ));
        $this->createTable('payment_type', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'company_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'name' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'description' => 
             array(
              'type' => 'clob',
              'length' => '',
             ),
             'enabled' => 
             array(
              'type' => 'boolean',
              'default' => '1',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'charset' => 'utf8',
             ));
        $this->createTable('product_category', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'company_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'name' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '100',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'charset' => 'utf8',
             ));
        $this->createTable('supplier', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'company_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'name' => 
             array(
              'type' => 'string',
              'length' => '100',
             ),
             'name_slug' => 
             array(
              'type' => 'string',
              'length' => '100',
             ),
             'identification' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             'email' => 
             array(
              'type' => 'string',
              'length' => '100',
             ),
             'contact_person' => 
             array(
              'type' => 'string',
              'length' => '100',
             ),
             'invoicing_address' => 
             array(
              'type' => 'clob',
              'length' => '',
             ),
             'website' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'phone' => 
             array(
              'type' => 'string',
              'length' => '20',
             ),
             'mobile' => 
             array(
              'type' => 'string',
              'length' => '20',
             ),
             'fax' => 
             array(
              'type' => 'string',
              'length' => '20',
             ),
             'comments' => 
             array(
              'type' => 'clob',
              'length' => '',
             ),
             'login' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             'password' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             'expense_type_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'cstm' => 
              array(
              'fields' => 
              array(
               0 => 'company_id',
               1 => 'name',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'charset' => 'utf8',
             ));
        $this->addColumn('common', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('common', 'customer_phone', 'string', '20', array(
             ));
        $this->addColumn('common', 'customer_fax', 'string', '20', array(
             ));
        $this->addColumn('common', 'supplier_id', 'integer', '8', array(
             ));
        $this->addColumn('common', 'supplier_name', 'string', '100', array(
             ));
        $this->addColumn('common', 'supplier_identification', 'string', '50', array(
             ));
        $this->addColumn('common', 'supplier_email', 'string', '100', array(
             ));
        $this->addColumn('common', 'supplier_phone', 'string', '20', array(
             ));
        $this->addColumn('common', 'supplier_fax', 'string', '20', array(
             ));
        $this->addColumn('common', 'payment_type_id', 'integer', '8', array(
             ));
        $this->addColumn('common', 'estimate_id', 'integer', '8', array(
             ));
        $this->addColumn('common', 'supplier_reference', 'string', '50', array(
             ));
        $this->addColumn('common', 'days_to_due', 'integer', '3', array(
             ));
        $this->addColumn('common', 'enabled', 'boolean', '25', array(
             'default' => '0',
             ));
        $this->addColumn('common', 'max_occurrences', 'integer', '4', array(
             ));
        $this->addColumn('common', 'period', 'integer', '4', array(
             ));
        $this->addColumn('common', 'period_type', 'string', '8', array(
             ));
        $this->addColumn('common', 'starting_date', 'date', '25', array(
             ));
        $this->addColumn('common', 'finishing_date', 'date', '25', array(
             ));
        $this->addColumn('common', 'draft', 'boolean', '25', array(
             'default' => '1',
             ));
        $this->addColumn('common', 'sent_by_email', 'boolean', '25', array(
             'default' => '0',
             ));
        $this->addColumn('common', 'number', 'integer', '4', array(
             ));
        $this->addColumn('common', 'recurring_invoice_id', 'integer', '8', array(
             ));
        $this->addColumn('common', 'issue_date', 'date', '25', array(
             ));
        $this->addColumn('common', 'due_date', 'date', '25', array(
             ));
        $this->addColumn('customer', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('customer', 'website', 'string', '255', array(
             ));
        $this->addColumn('customer', 'phone', 'string', '20', array(
             ));
        $this->addColumn('customer', 'mobile', 'string', '20', array(
             ));
        $this->addColumn('customer', 'fax', 'string', '20', array(
             ));
        $this->addColumn('customer', 'comments', 'clob', '', array(
             ));
        $this->addColumn('item', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('item', 'expense_type_id', 'integer', '8', array(
             ));
        $this->addColumn('item_tax', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('payment', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('payment', 'payment_type_id', 'integer', '8', array(
             ));
        $this->addColumn('product', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('product', 'category_id', 'integer', '8', array(
             ));
        $this->addColumn('property', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('series', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('tax', 'company_id', 'integer', '8', array(
             ));
        $this->addColumn('template', 'company_id', 'integer', '8', array(
             ));
    }

    public function down()
    {
        $this->dropTable('company');
        $this->dropTable('company_user');
        $this->dropTable('expense_type');
        $this->dropTable('payment_type');
        $this->dropTable('product_category');
        $this->dropTable('supplier');
        $this->removeColumn('common', 'company_id');
        $this->removeColumn('common', 'customer_phone');
        $this->removeColumn('common', 'customer_fax');
        $this->removeColumn('common', 'supplier_id');
        $this->removeColumn('common', 'supplier_name');
        $this->removeColumn('common', 'supplier_identification');
        $this->removeColumn('common', 'supplier_email');
        $this->removeColumn('common', 'supplier_phone');
        $this->removeColumn('common', 'supplier_fax');
        $this->removeColumn('common', 'payment_type_id');
        $this->removeColumn('common', 'estimate_id');
        $this->removeColumn('common', 'supplier_reference');
        $this->removeColumn('common', 'days_to_due');
        $this->removeColumn('common', 'enabled');
        $this->removeColumn('common', 'max_occurrences');
        $this->removeColumn('common', 'period');
        $this->removeColumn('common', 'period_type');
        $this->removeColumn('common', 'starting_date');
        $this->removeColumn('common', 'finishing_date');
        $this->removeColumn('common', 'draft');
        $this->removeColumn('common', 'sent_by_email');
        $this->removeColumn('common', 'number');
        $this->removeColumn('common', 'recurring_invoice_id');
        $this->removeColumn('common', 'issue_date');
        $this->removeColumn('common', 'due_date');
        $this->removeColumn('customer', 'company_id');
        $this->removeColumn('customer', 'website');
        $this->removeColumn('customer', 'phone');
        $this->removeColumn('customer', 'mobile');
        $this->removeColumn('customer', 'fax');
        $this->removeColumn('customer', 'comments');
        $this->removeColumn('item', 'company_id');
        $this->removeColumn('item', 'expense_type_id');
        $this->removeColumn('item_tax', 'company_id');
        $this->removeColumn('payment', 'company_id');
        $this->removeColumn('payment', 'payment_type_id');
        $this->removeColumn('product', 'company_id');
        $this->removeColumn('product', 'category_id');
        $this->removeColumn('property', 'company_id');
        $this->removeColumn('series', 'company_id');
        $this->removeColumn('tax', 'company_id');
        $this->removeColumn('template', 'company_id');
    }
}
